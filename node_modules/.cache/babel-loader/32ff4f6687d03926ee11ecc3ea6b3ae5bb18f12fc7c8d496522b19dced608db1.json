{"ast":null,"code":"var _jsxFileName = \"/workspaces/recanti/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport db from '../db/dexie';\nimport '../styles/Home.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  const [query, setQuery] = useState(''); // This controls the input query\n  const hasRunOnce = useRef(false);\n\n  // ✅ 1. Populate results dynamically when query changes\n  useEffect(() => {\n    if (query.trim() === '') {\n      populateResults(); // If query is empty, load all results\n    } else {\n      populateResults(query);\n    }\n  }, [query]);\n\n  // ✅ 2. Populate the database once on load\n  useEffect(() => {\n    if (hasRunOnce.current) return;\n    hasRunOnce.current = true;\n    checkAndPopulateDatabase();\n  }, []); // Empty dependency array to ensure it runs only once\n\n  // ✅ 3. **Adjust container on orientation change or window resize**\n  useEffect(() => {\n    const adjustContainerSize = () => {\n      const container = document.querySelector('.container');\n      if (container) {\n        container.style.width = `${window.innerWidth}px`;\n        container.style.height = `${window.innerHeight}px`;\n      }\n    };\n    adjustContainerSize();\n    window.addEventListener('resize', adjustContainerSize);\n    window.addEventListener('orientationchange', adjustContainerSize);\n    return () => {\n      window.removeEventListener('resize', adjustContainerSize);\n      window.removeEventListener('orientationchange', adjustContainerSize);\n    };\n  }, []);\n\n  // Function to check if the database is empty and populate it if needed\n  const checkAndPopulateDatabase = useCallback(async () => {\n    try {\n      const recordsCount = await db.lyrics.count();\n      if (recordsCount === 0) {\n        var _data$data, _data$data$data;\n        console.log('Database is empty, populating from JSON file...');\n        const response = await fetch(`${process.env.PUBLIC_URL}/scripts/db.json`, {\n          cache: 'force-cache'\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to fetch db.json: ${response.status} ${response.statusText}`);\n        }\n        const data = await response.json();\n        console.log('Full Data:', data);\n        const table = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$data = _data$data.data) === null || _data$data$data === void 0 ? void 0 : _data$data$data.find(table => table.tableName === 'lyrics');\n        if (!table) {\n          throw new Error('Lyrics table not found in the JSON file.');\n        }\n        const lyricsData = table.rows;\n        if (!lyricsData || !Array.isArray(lyricsData) || lyricsData.length === 0) {\n          throw new Error('No data found in the lyrics table from the JSON file.');\n        }\n        await db.lyrics.bulkAdd(lyricsData);\n        console.log('Database populated successfully with', lyricsData.length, 'records.');\n      } else {\n        console.log('Database already populated with', recordsCount, 'records.');\n      }\n      populateResults();\n    } catch (error) {\n      console.error('Failed to populate the database:', error);\n    }\n  }, []);\n\n  // **Updated function to populate results using the 'starts with' and 'contains' logic**\n  const populateResults = useCallback(async (query = \"\") => {\n    try {\n      if (!query) {\n        const allResults = await db.lyrics.toArray();\n        setResults(allResults.length > 0 ? allResults : [{\n          id: 0,\n          title: 'Nessun risultato trovato'\n        }]);\n        return;\n      }\n      const normalizedQuery = query.toLowerCase();\n\n      // **Step 1:** First, prioritize \"starts with\" matches\n      const startsWithResults = await db.lyrics.filter(record => {\n        const searchText = `${record.title || ''} ${record.text || ''} ${record.notes || ''} ${record.category || ''}`.toLowerCase();\n        return searchText.startsWith(normalizedQuery);\n      }).toArray();\n\n      // **Step 2:** Then, add \"contains\" matches that don't start with the query\n      const containsResults = await db.lyrics.filter(record => {\n        const searchText = `${record.title || ''} ${record.text || ''} ${record.notes || ''} ${record.category || ''}`.toLowerCase();\n        return searchText.includes(normalizedQuery) && !searchText.startsWith(normalizedQuery);\n      }).toArray();\n\n      // Combine the two sets of results, ensuring no duplicates\n      const combinedResults = [...startsWithResults, ...containsResults];\n      if (combinedResults.length === 0) {\n        setResults([{\n          id: 0,\n          title: 'Nessun risultato trovato'\n        }]);\n      } else {\n        setResults(combinedResults);\n      }\n    } catch (error) {\n      console.error('Failed to populate the results:', error);\n    }\n  }, []);\n\n  // **Handles input change in the search box**\n  const handleSearchInput = e => {\n    const query = e.target.value; // No trim() to allow for spaces\n    setQuery(query); // Update the query to trigger the `useEffect`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Canti & Lyrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitle\",\n      children: \"Lazzaro - S.Fiesole\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/db-admin\",\n        className: \"button\",\n        children: \"DB Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/aggiungi\",\n        className: \"button\",\n        children: \"Aggiungi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search-input\",\n        placeholder: \"Ricerca\",\n        className: \"search-input\",\n        value: query,\n        onChange: handleSearchInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-box\",\n      children: results.map(record => /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => window.location.href = `/record/${record.id}`,\n        children: record.title || 'Titolo sconosciuto'\n      }, record.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"wmLyefMrpA2i0YvuS7aKbR6TrRM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","db","Link","jsxDEV","_jsxDEV","Home","_s","results","setResults","query","setQuery","hasRunOnce","trim","populateResults","current","checkAndPopulateDatabase","adjustContainerSize","container","document","querySelector","style","width","window","innerWidth","height","innerHeight","addEventListener","removeEventListener","recordsCount","lyrics","count","_data$data","_data$data$data","console","log","response","fetch","process","env","PUBLIC_URL","cache","ok","Error","status","statusText","data","json","table","find","tableName","lyricsData","rows","Array","isArray","length","bulkAdd","error","allResults","toArray","id","title","normalizedQuery","toLowerCase","startsWithResults","filter","record","searchText","text","notes","category","startsWith","containsResults","includes","combinedResults","handleSearchInput","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","type","placeholder","onChange","map","onClick","location","href","_c","$RefreshReg$"],"sources":["/workspaces/recanti/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport db from '../db/dexie'; \nimport '../styles/Home.css'; \nimport { Link } from 'react-router-dom';\n\n\nconst Home = () => {\n  const [results, setResults] = useState([]);\n  const [query, setQuery] = useState(''); // This controls the input query\n  const hasRunOnce = useRef(false); \n\n  // ✅ 1. Populate results dynamically when query changes\n  useEffect(() => {\n    if (query.trim() === '') {\n      populateResults(); // If query is empty, load all results\n    } else {\n      populateResults(query);\n    }\n  }, [query]); \n\n  // ✅ 2. Populate the database once on load\n  useEffect(() => {\n    if (hasRunOnce.current) return; \n    hasRunOnce.current = true;\n    checkAndPopulateDatabase();\n  }, []); // Empty dependency array to ensure it runs only once\n\n  // ✅ 3. **Adjust container on orientation change or window resize**\n  useEffect(() => {\n    const adjustContainerSize = () => {\n      const container = document.querySelector('.container');\n      if (container) {\n        container.style.width = `${window.innerWidth}px`;\n        container.style.height = `${window.innerHeight}px`;\n      }\n    };\n\n    adjustContainerSize();\n\n    window.addEventListener('resize', adjustContainerSize);\n    window.addEventListener('orientationchange', adjustContainerSize);\n\n    return () => {\n      window.removeEventListener('resize', adjustContainerSize);\n      window.removeEventListener('orientationchange', adjustContainerSize);\n    };\n  }, []); \n\n  // Function to check if the database is empty and populate it if needed\n  const checkAndPopulateDatabase = useCallback(async () => {\n    try {\n      const recordsCount = await db.lyrics.count();\n      if (recordsCount === 0) {\n        console.log('Database is empty, populating from JSON file...');\n\n        const response = await fetch(`${process.env.PUBLIC_URL}/scripts/db.json`, { cache: 'force-cache' });\n        if (!response.ok) {\n          throw new Error(`Failed to fetch db.json: ${response.status} ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        console.log('Full Data:', data); \n        const table = data?.data?.data?.find(table => table.tableName === 'lyrics');\n        if (!table) {\n          throw new Error('Lyrics table not found in the JSON file.');\n        }\n\n        const lyricsData = table.rows;\n        if (!lyricsData || !Array.isArray(lyricsData) || lyricsData.length === 0) {\n          throw new Error('No data found in the lyrics table from the JSON file.');\n        }\n\n        await db.lyrics.bulkAdd(lyricsData);\n        console.log('Database populated successfully with', lyricsData.length, 'records.');\n      } else {\n        console.log('Database already populated with', recordsCount, 'records.');\n      }\n\n      populateResults(); \n\n    } catch (error) {\n      console.error('Failed to populate the database:', error);\n    }\n  }, []);\n\n  // **Updated function to populate results using the 'starts with' and 'contains' logic**\n  const populateResults = useCallback(async (query = \"\") => {\n    try {\n      if (!query) {\n        const allResults = await db.lyrics.toArray();\n        setResults(allResults.length > 0 ? allResults : [{ id: 0, title: 'Nessun risultato trovato' }]);\n        return;\n      }\n\n      const normalizedQuery = query.toLowerCase();\n\n      // **Step 1:** First, prioritize \"starts with\" matches\n      const startsWithResults = await db.lyrics.filter(record => {\n        const searchText = `${record.title || ''} ${record.text || ''} ${record.notes || ''} ${record.category || ''}`.toLowerCase();\n        return searchText.startsWith(normalizedQuery);\n      }).toArray();\n\n      // **Step 2:** Then, add \"contains\" matches that don't start with the query\n      const containsResults = await db.lyrics.filter(record => {\n        const searchText = `${record.title || ''} ${record.text || ''} ${record.notes || ''} ${record.category || ''}`.toLowerCase();\n        return searchText.includes(normalizedQuery) && !searchText.startsWith(normalizedQuery); \n      }).toArray();\n\n      // Combine the two sets of results, ensuring no duplicates\n      const combinedResults = [...startsWithResults, ...containsResults];\n\n      if (combinedResults.length === 0) {\n        setResults([{ id: 0, title: 'Nessun risultato trovato' }]);\n      } else {\n        setResults(combinedResults);\n      }\n    } catch (error) {\n      console.error('Failed to populate the results:', error);\n    }\n  }, []);\n\n  // **Handles input change in the search box**\n  const handleSearchInput = (e) => {\n    const query = e.target.value; // No trim() to allow for spaces\n    setQuery(query); // Update the query to trigger the `useEffect`\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Canti & Lyrics</h1>\n      <p className=\"subtitle\">Lazzaro - S.Fiesole</p>\n      <div className=\"button-group\">\n      <Link to=\"/db-admin\" className=\"button\">DB Admin</Link> \n      <Link to=\"/aggiungi\" className=\"button\">Aggiungi</Link> \n      </div>\n\n      <div className=\"search-box\">\n        <input \n          type=\"text\" \n          id=\"search-input\" \n          placeholder=\"Ricerca\" \n          className=\"search-input\" \n          value={query}\n          onChange={handleSearchInput} \n        />\n      </div>\n\n      <div className=\"results-box\">\n        {results.map(record => (\n          <p key={record.id} onClick={() => window.location.href = `/record/${record.id}`}>\n            {record.title || 'Titolo sconosciuto'}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,EAAE,MAAM,aAAa;AAC5B,OAAO,oBAAoB;AAC3B,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAMc,UAAU,GAAGZ,MAAM,CAAC,KAAK,CAAC;;EAEhC;EACAD,SAAS,CAAC,MAAM;IACd,IAAIW,KAAK,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvBC,eAAe,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACLA,eAAe,CAACJ,KAAK,CAAC;IACxB;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACAX,SAAS,CAAC,MAAM;IACd,IAAIa,UAAU,CAACG,OAAO,EAAE;IACxBH,UAAU,CAACG,OAAO,GAAG,IAAI;IACzBC,wBAAwB,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACAjB,SAAS,CAAC,MAAM;IACd,MAAMkB,mBAAmB,GAAGA,CAAA,KAAM;MAChC,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;MACtD,IAAIF,SAAS,EAAE;QACbA,SAAS,CAACG,KAAK,CAACC,KAAK,GAAG,GAAGC,MAAM,CAACC,UAAU,IAAI;QAChDN,SAAS,CAACG,KAAK,CAACI,MAAM,GAAG,GAAGF,MAAM,CAACG,WAAW,IAAI;MACpD;IACF,CAAC;IAEDT,mBAAmB,CAAC,CAAC;IAErBM,MAAM,CAACI,gBAAgB,CAAC,QAAQ,EAAEV,mBAAmB,CAAC;IACtDM,MAAM,CAACI,gBAAgB,CAAC,mBAAmB,EAAEV,mBAAmB,CAAC;IAEjE,OAAO,MAAM;MACXM,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAEX,mBAAmB,CAAC;MACzDM,MAAM,CAACK,mBAAmB,CAAC,mBAAmB,EAAEX,mBAAmB,CAAC;IACtE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMD,wBAAwB,GAAGf,WAAW,CAAC,YAAY;IACvD,IAAI;MACF,MAAM4B,YAAY,GAAG,MAAM3B,EAAE,CAAC4B,MAAM,CAACC,KAAK,CAAC,CAAC;MAC5C,IAAIF,YAAY,KAAK,CAAC,EAAE;QAAA,IAAAG,UAAA,EAAAC,eAAA;QACtBC,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;QAE9D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,kBAAkB,EAAE;UAAEC,KAAK,EAAE;QAAc,CAAC,CAAC;QACnG,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4BP,QAAQ,CAACQ,MAAM,IAAIR,QAAQ,CAACS,UAAU,EAAE,CAAC;QACvF;QAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAClCb,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEW,IAAI,CAAC;QAC/B,MAAME,KAAK,GAAGF,IAAI,aAAJA,IAAI,wBAAAd,UAAA,GAAJc,IAAI,CAAEA,IAAI,cAAAd,UAAA,wBAAAC,eAAA,GAAVD,UAAA,CAAYc,IAAI,cAAAb,eAAA,uBAAhBA,eAAA,CAAkBgB,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACE,SAAS,KAAK,QAAQ,CAAC;QAC3E,IAAI,CAACF,KAAK,EAAE;UACV,MAAM,IAAIL,KAAK,CAAC,0CAA0C,CAAC;QAC7D;QAEA,MAAMQ,UAAU,GAAGH,KAAK,CAACI,IAAI;QAC7B,IAAI,CAACD,UAAU,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,IAAIA,UAAU,CAACI,MAAM,KAAK,CAAC,EAAE;UACxE,MAAM,IAAIZ,KAAK,CAAC,uDAAuD,CAAC;QAC1E;QAEA,MAAMzC,EAAE,CAAC4B,MAAM,CAAC0B,OAAO,CAACL,UAAU,CAAC;QACnCjB,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEgB,UAAU,CAACI,MAAM,EAAE,UAAU,CAAC;MACpF,CAAC,MAAM;QACLrB,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEN,YAAY,EAAE,UAAU,CAAC;MAC1E;MAEAf,eAAe,CAAC,CAAC;IAEnB,CAAC,CAAC,OAAO2C,KAAK,EAAE;MACdvB,OAAO,CAACuB,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM3C,eAAe,GAAGb,WAAW,CAAC,OAAOS,KAAK,GAAG,EAAE,KAAK;IACxD,IAAI;MACF,IAAI,CAACA,KAAK,EAAE;QACV,MAAMgD,UAAU,GAAG,MAAMxD,EAAE,CAAC4B,MAAM,CAAC6B,OAAO,CAAC,CAAC;QAC5ClD,UAAU,CAACiD,UAAU,CAACH,MAAM,GAAG,CAAC,GAAGG,UAAU,GAAG,CAAC;UAAEE,EAAE,EAAE,CAAC;UAAEC,KAAK,EAAE;QAA2B,CAAC,CAAC,CAAC;QAC/F;MACF;MAEA,MAAMC,eAAe,GAAGpD,KAAK,CAACqD,WAAW,CAAC,CAAC;;MAE3C;MACA,MAAMC,iBAAiB,GAAG,MAAM9D,EAAE,CAAC4B,MAAM,CAACmC,MAAM,CAACC,MAAM,IAAI;QACzD,MAAMC,UAAU,GAAG,GAAGD,MAAM,CAACL,KAAK,IAAI,EAAE,IAAIK,MAAM,CAACE,IAAI,IAAI,EAAE,IAAIF,MAAM,CAACG,KAAK,IAAI,EAAE,IAAIH,MAAM,CAACI,QAAQ,IAAI,EAAE,EAAE,CAACP,WAAW,CAAC,CAAC;QAC5H,OAAOI,UAAU,CAACI,UAAU,CAACT,eAAe,CAAC;MAC/C,CAAC,CAAC,CAACH,OAAO,CAAC,CAAC;;MAEZ;MACA,MAAMa,eAAe,GAAG,MAAMtE,EAAE,CAAC4B,MAAM,CAACmC,MAAM,CAACC,MAAM,IAAI;QACvD,MAAMC,UAAU,GAAG,GAAGD,MAAM,CAACL,KAAK,IAAI,EAAE,IAAIK,MAAM,CAACE,IAAI,IAAI,EAAE,IAAIF,MAAM,CAACG,KAAK,IAAI,EAAE,IAAIH,MAAM,CAACI,QAAQ,IAAI,EAAE,EAAE,CAACP,WAAW,CAAC,CAAC;QAC5H,OAAOI,UAAU,CAACM,QAAQ,CAACX,eAAe,CAAC,IAAI,CAACK,UAAU,CAACI,UAAU,CAACT,eAAe,CAAC;MACxF,CAAC,CAAC,CAACH,OAAO,CAAC,CAAC;;MAEZ;MACA,MAAMe,eAAe,GAAG,CAAC,GAAGV,iBAAiB,EAAE,GAAGQ,eAAe,CAAC;MAElE,IAAIE,eAAe,CAACnB,MAAM,KAAK,CAAC,EAAE;QAChC9C,UAAU,CAAC,CAAC;UAAEmD,EAAE,EAAE,CAAC;UAAEC,KAAK,EAAE;QAA2B,CAAC,CAAC,CAAC;MAC5D,CAAC,MAAM;QACLpD,UAAU,CAACiE,eAAe,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdvB,OAAO,CAACuB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMkB,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMlE,KAAK,GAAGkE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;IAC9BnE,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,oBACEL,OAAA;IAAK0E,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB3E,OAAA;MAAI0E,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzC/E,OAAA;MAAG0E,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC/C/E,OAAA;MAAK0E,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC7B3E,OAAA,CAACF,IAAI;QAACkF,EAAE,EAAC,WAAW;QAACN,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvD/E,OAAA,CAACF,IAAI;QAACkF,EAAE,EAAC,WAAW;QAACN,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAEN/E,OAAA;MAAK0E,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzB3E,OAAA;QACEiF,IAAI,EAAC,MAAM;QACX1B,EAAE,EAAC,cAAc;QACjB2B,WAAW,EAAC,SAAS;QACrBR,SAAS,EAAC,cAAc;QACxBD,KAAK,EAAEpE,KAAM;QACb8E,QAAQ,EAAEb;MAAkB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN/E,OAAA;MAAK0E,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBxE,OAAO,CAACiF,GAAG,CAACvB,MAAM,iBACjB7D,OAAA;QAAmBqF,OAAO,EAAEA,CAAA,KAAMnE,MAAM,CAACoE,QAAQ,CAACC,IAAI,GAAG,WAAW1B,MAAM,CAACN,EAAE,EAAG;QAAAoB,QAAA,EAC7Ed,MAAM,CAACL,KAAK,IAAI;MAAoB,GAD/BK,MAAM,CAACN,EAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7E,EAAA,CAtJID,IAAI;AAAAuF,EAAA,GAAJvF,IAAI;AAwJV,eAAeA,IAAI;AAAC,IAAAuF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}